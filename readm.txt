usado isto no .json{
trocado de teste para dev e o main mapeando o caminho src/server.js e na frente do dev mdou para nodemon 
 lembrand que foi instalado o pacote yarn add nodemon -D }

sucrase{
    para que o nodemon possa interpretar esta sintax para isso 
    precisa colocar este configuracao criando um arquivo chamado nodemom.json e colocar isso dentro
    {
    "execMap": {
        "js": "node -r sucrase/register"
    }
}

    yarn add sucrase -D
    import express from 'express'

}

docker run --name loboBranco-postgres -e POSTGRES_PASSWORD=postgres  -p 5432:5432 -d postgres
'use strict';

/** @type {import('sequelize-cli').Migration} */
module.exports = {
  async up (queryInterface, Sequelize) {
    
   
    await queryInterface.createTable('users', {
       id:{
        primaryKey:true,
        allowNull:false,
        type:Sequelize.UUID,
        defaultValue:Sequelize.UUIDV4,
       },
      name:{
        type: Sequelize.STRING,
        allownull:false
      },
      email:{
        type: Sequelize.STRING,
        allowNull:false,
        unique:true,

      },
      password_hash:{
        type:Sequelize.STRING,
        allowNull:false,
      },
      admin:{
        type:Sequelize.STRING,
        defaultValue:false
      },
      created_at:{
        type: Sequelize.DATE,
        allowNull:false,
      },
      updated_at:{
        type: Sequelize.DATE,
        allowNull:false,
      }
      
      });
    
  },

  async down (queryInterface) {
  
     await queryInterface.dropTable('users');
     
  },
};
yarn add uuid     

yarn add yup para estrutrar as classes

criar a tabela produtos
yarn sequelize migration:create --name create-products-table

'use strict';

const { addListener } = require('nodemon');

/** @type {import('sequelize-cli').Migration} */
module.exports = {
  async up(queryInterface, Sequelize) {

    await queryInterface.createTable('products', {
      id: {
        type: Sequelize.INTEGER,
        allowNull: false,
        primaryKey: true,
        autoIncrement: true,
      },
      name:{
      type: Sequelize.STRING,
      allowNull: false,
      },
      price: {
      type: Sequelize.INTEGER,
      allowNull: false,
      },
      category:{
        type:Sequelize.STRING,
        allowNull:false,

      },

      path:{
        type: Sequelize.STRING,
        allowNull:false,
      },
      created_at:{
        type: Sequelize.DATE,
        allowNull: false,
      },
      update_at:{
        type: Sequelize.DATE,
        allowNull: false,
      },
    
                                                });
},

  async down(queryInterface) {

  await queryInterface.dropTable('products');

}
};


yarn add multer

Chave secreta loginUser : HAHAHAHAHAHAH